html, body {
  height: 100%;
}

html {
  overflow-y: scroll;
  //overflow-x: hidden;
}

body {
  font: 14px/1.2 $GothamProRegular;
  color: $default_t_color;
  min-width: $content-max-w;
}

.hide {
  display: none !important;
}

.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}

.clearfix:after {
  clear: both;
}

.fl {
  float: left;
}

.fr {
  float: right;
}

.mb {
  display: inline-block;
  vertical-align: middle;
  line-height: normal;
}

.wrapper {
  @extend %global_flex_block_column_nowrap_space_between_stretch;
  position: relative;
  min-height: 100%;
  padding: 100px 0 0;
}

.main_content {
  @include transition_all(padding .3s);
  padding: 50px 0;

  .header-small & {
    padding-top: 25px;
  }
}

.base {
  @include flex(1 0 auto);
}

.section_inner {
  width: 100%;
  max-width: $content-max-w;
  padding: 0 10px;
  margin: 0 auto 30px;
}

.col {

  &._wide {
    width: 61.5%;
  }

  &._narrow {
    width: 37.5%;
  }
}

.title_holder {
  @include transition_all(margin .3s);
  @extend %clearfix;
  line-height: 40px;
  margin-bottom: 30px;

  .header-small .sticked_section & {
    margin-bottom: 15px;
  }
}

.title_controls {

  > li {
    float: left;
    padding-left: 8px;
  }
}

.stick_spacer {
  position: relative;
}

.pair_sticker {
  @extend %translate3d;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;

  &.sticked {

    #lock_currency_pairs:checked ~ .stick_spacer & {
      position: fixed;
      top: 50px;
      right: 0;
      left: 0;
      z-index: 10;
      background: $white;
    }
  }
}

.pair_holder {
  overflow: hidden;
}

.pair_list {
  @extend %clearfix;
  margin-right: -10%;

  li {
    float: left;
    width: 7%;
    border: solid $white;
    border-width: 1px 0 0 1px;

    &:first-child {
      border-left: 0;
    }

  }
}

.pair_name {
  cursor: pointer;
  font-family: $GothamProMedium;
}

.pair_item {
  @include transition_all(padding .3s);
  text-align: center;
  position: relative;
  font-size: 12px;

  &:before {
    @include transition_all(background .3s);
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    height: 1px;
    background: $white;
  }

  &:hover {

    &:before {
      background: $blue_lighten;
    }

    .pair_name {
      background: $gray_light_2;
      color: $blue_light;
    }
  }

  &.active {
    &:before {
      display: none;
    }

    .pair_name {
      background: $blue_light;
      color: $white;
    }

    .pair_val-1 {
      background: #e9ebf0;
    }

    .pair_val-2 {
      background: #e9ebf0;
      border-color: #dcdee3;
    }
  }
}

.pair_cell {
  @include transition_all(background .3s, color .3s);
  background: #f7f7fa;
  height: 30px;
  line-height: 16px;
  padding: 7px 5px 6px;
  border-top: 1px solid $white;
  letter-spacing: .5px;

  &.pair_val-1 {
    letter-spacing: 1px;
  }

  &.pair_val-2 {
    border-color: #e9ebef;
    letter-spacing: 1px;
  }
}

.pair_val-2 {
  display: none;

  #double_value_pairs:checked ~ .pair_list & {
    display: block;
  }

}

.box_1 {
  background: #fafafc;
  border-radius: 2px;
  border: 1px solid #dce2e6;
}

.box_2 {
  background: #fafafc;
}

.scroll-v1 {
  .mCSB_scrollTools {
    width: 10px;
    opacity: 0;

    .mCSB_dragger .mCSB_dragger_bar {
      border-radius: 2px;
      background: #bec4cf;
      opacity: .7;
    }

    .mCSB_draggerRail {
      background: none;
    }
  }

  &:hover {
    .mCSB_scrollTools {
      opacity: .5;
    }
  }

  &._is-scrolling .mCSB_scrollTools {
    opacity: 1;
  }

  .mCSB_scrollTools:hover {
    opacity: 1;
  }
}

.pagination_list {
  @extend %clearfix;
  padding-left: 12px;

  li {
    float: left;
    line-height: 26px;
    padding-left: 5px;

    &._first {
      padding-right: 15px;
    }

    &._last {
      padding-left: 20px;
    }
  }

  .gl_link {
    @include transition_all(border .3s);
    display: block;
    position: relative;
    padding: 5px 8px;
    font-family: $GothamProMedium;
    color: $black;
    text-decoration: none;
  }

  a.gl_link {
    &:before {
      @include transition_all(transform .3s, opacity .3s);
      @include transform_translate(0, 10px);
      content: '';
      position: absolute;
      bottom: 6px;
      right: 0;
      left: 0;
      height: 2px;
      opacity: 0;
      background: $blue_light_2;
    }

    &:hover {
      text-decoration: none;

      &:before {
        @include transform_translate(0, 0);
        opacity: 1;
      }
    }

    &.current {
      cursor: default;

      &:before {
        @include transform_translate(0, 0);
        opacity: 1;
      }
    }
  }
}




